@IBAction func btnGoogle_Action(_ sender: Any) {
        GIDSignIn.sharedInstance().delegate=self
        GIDSignIn.sharedInstance().uiDelegate=self
        GIDSignIn.sharedInstance().signIn()
    }
    
    extension SocialLoginVC: GIDSignInDelegate {
    func sign(_ signIn: GIDSignIn!, didSignInFor user: GIDGoogleUser!, withError error: Error!) {
        if let error = error {
            print("\(error.localizedDescription)")
        } else {
            // Perform any operations on signed in user here.
          
            if (user != nil){
                var dict = [String : String]()
                dict["google_id"] = user.userID
                dict["token"] = user.authentication.idToken
                dict["full_name"] = user.profile.name
                dict["email"] = user.profile.email
                dict["img_url"] = user.profile.imageURL(withDimension: 200)?.absoluteString
                self.intSocialLogin = 0
                self.performSegue(withIdentifier: "toPhone", sender: dict)
            }
        }
    }
}

extension SocialLoginVC: GIDSignInUIDelegate {
    func sign(inWillDispatch signIn: GIDSignIn!, error: Error!) {
        
    }
    
    func sign(_ signIn: GIDSignIn!,
              present viewController: UIViewController!) {
        self.present(viewController, animated: true, completion: nil)
    }

    func sign(_ signIn: GIDSignIn!,
              dismiss viewController: UIViewController!) {
        self.dismiss(animated: true, completion: nil)
    }
}
